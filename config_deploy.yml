#plugins:
#  - examples.bogusdatasource

datasources:
  petals:
    type: csv
    path: ./private/iris_train.csv  # The string can also be a URL. Valid URL schemes include http, ftp, s3, and file.
    expires: 0  # -1: never (=cached forever), 0: immediately (=no caching), >0: time in seconds.
    options: {}
    tags: train
  petals_test:
    type: csv
    path: ./private/iris_holdout.csv  # The string can also be a URL. Valid URL schemes include http, ftp, s3, and file.
    expires: 3600  # -1: never (=cached forever), 0: immediately (=no caching), >0: time in seconds.
    options: {}
    tags: test

model_store:
  location: model_store  # TODO: maybe support sftp or other remote locations...

model:
  name: IrisModel
  version: '0.0.4'  # use semantic versioning (<breaking>.<adding>.<fix>)
  module: app.model  # same as file name without .py
  train_options: {}
  predict_options: {}

api:
  name: iris  # name of the service api
  version: '0.0.4'  # use semantic versioning (breaking.adding.fix), first segment will be used in url as e.g. .../v1/...
  raml: api.raml
  preload_datasources: True  # Load datasources into memory before any predictions. Only makes sense with caching.
  root_path: .  # (optional) set directory where Flask should look for the directories `static` and `templates` to serve.

deploy:
  include:  # Uses recursion
    - app/*
    - '*.yml'
    - '*.raml'
    - requirements_frozen.txt
    - wheels/*
    - model_store/*
  exclude:  # Exclude files with any of these strings in their path
    - __pycache__
    - config_tpl.yml
    - config_dev.yml
  requirements:
    file: requirements_frozen.txt
    platform: manylinux1_x86_64
    save_to: wheels
  python: '3.6'
  target: sftp://127.0.0.1/models
  params: {}
